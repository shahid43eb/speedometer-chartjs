{"version":3,"sources":["components/Chart.jsx","App.js","index.js"],"names":["Chart","data","labels","datasets","backgroundColor","hoverBackgroundColor","borderWidth","options","layout","padding","bottom","top","responsive","rotation","Math","PI","circumference","legend","display","tooltips","enabled","transition","active","animation","duration","cutoutPercentage","easing","onProgress","chart","needleValue","config","dataTotal","reduce","a","b","angle","currentStep","numSteps","ctx","cx","canvas","offsetWidth","cy","offsetHeight","translate","rotate","beginPath","moveTo","lineTo","fillStyle","fill","arc","react_default","createElement","es","height","plugins","id","afterInit","dataset","gradient","createLinearGradient","addColorStop","App","React","Component","rootElement","document","getElementById","ReactDOM","render","StrictMode","src_App"],"mappings":"8KAGeA,EAAA,WACb,IAaMC,EAAO,CACXC,OAAQ,CAAC,QAAS,QAClBC,SAAU,CACR,CACEF,KAAM,CAAC,GAAG,IACVG,gBAAiB,CAAC,QAAQ,WAC1BC,qBAAsB,CAAC,QAAQ,WAC/BC,YAAa,CAAC,EAAG,KAGrBC,QAAS,CACPC,OAAQ,CACNC,QAAS,CACPC,OAAQ,GACRC,IAAK,KAGTC,WAAW,OACXC,SAAUC,KAAKC,GACfC,cAAeF,KAAKC,GACpBE,OAAQ,CACNC,SAAS,GAEXC,SAAU,CACRC,SAAS,GAEXC,WAAY,CACVC,OAAQ,CACNC,UAAW,CACTC,SAAU,OAIhBC,iBAAkB,GAClBF,UAAW,CACTG,OAAO,SACPC,WAAW,SAACC,GACV,IAAMC,EAAcD,EAAMA,MAAME,OAAO7B,KAAKE,SAAS,GAAGF,KAAK,GACvD8B,EAAYH,EAAMA,MAAME,OAAO7B,KAAKE,SAAS,GAAGF,KAAK+B,OACvD,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,GACd,GAEEC,EAAQrB,KAAKC,GAAQa,EAAMQ,YAAYR,EAAMS,SAAWN,EAAcF,EAAef,KAAKC,GAC1FuB,EAAMV,EAAMA,MAAMU,IAGlBC,EAFKX,EAAMA,MAAMY,OAAOC,YAEb,EACXC,EAFKd,EAAMA,MAAMY,OAAOG,aAEb,GAEjBL,EAAIM,UAAUL,EAAIG,GAClBJ,EAAIO,OAAOV,GACXG,EAAIQ,YACJR,EAAIS,OAAO,GAAI,IACfT,EAAIU,OAAON,EAAI,GACfJ,EAAIU,OAAO,EAAG,IACdV,EAAIW,UAAY,QAChBX,EAAIY,OACJZ,EAAIO,QAAQV,GACZG,EAAIM,WAAWL,GAAKG,GACpBJ,EAAIQ,YACJR,EAAIa,IAAIZ,EAAIG,EAAI,GAAI,EAAa,EAAV5B,KAAKC,IAC5BuB,EAAIY,WAMZ,OACIE,EAAAnB,EAAAoB,cAAA,WACED,EAAAnB,EAAAoB,cAAA,oBACAD,EAAAnB,EAAAoB,cAACC,EAAA,EAAD,CAAUC,OAAO,QAAQtD,KAAMA,EAAMM,QAASN,EAAKM,QAASiD,QAAS,CAnF9D,CACXC,GAAI,mCACJC,UAAW,SAAA9B,GACT,IAAMU,EAAMV,EAAMA,MAAMU,IAClBqB,EAAQ/B,EAAMA,MAAME,OAAO7B,KAAKE,SAAS,GACzCyD,EAAWtB,EAAIuB,qBAAqC,EAAhBF,EAAQ1D,KAAK,GAAqB,EAAhB0D,EAAQ1D,KAAK,GAAM,IAAK,KACpF2D,EAASE,aAAa,EAAG,WACzBF,EAASE,aAAa,GAAK,WAC3BH,EAAQvD,gBAAgB,GAAKwD,EAC7BD,EAAQtD,qBAAqB,GAAKuD,SCDzBG,8JARb,WACE,OACEX,EAAAnB,EAAAoB,cAAA,WACED,EAAAnB,EAAAoB,cAACrD,EAAD,cAJUgE,IAAMC,WCElBC,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACPlB,EAAAnB,EAAAoB,cAACD,EAAAnB,EAAMsC,WAAP,KACEnB,EAAAnB,EAAAoB,cAACmB,EAAD,OAEFN","file":"static/js/main.b27f8729.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Doughnut } from \"react-chartjs-2\";\r\n\r\nexport default ()=> {\r\n  const plugin={\r\n    id: 'custom_gradient_background_color',\r\n    afterInit: chart => {\r\n      const ctx = chart.chart.ctx;\r\n      const dataset=chart.chart.config.data.datasets[0];\r\n      const gradient = ctx.createLinearGradient(dataset.data[0]*4,dataset.data[1]*5, 1000,500);\r\n      gradient.addColorStop(0, '#04C0FF');\r\n      gradient.addColorStop(0.5, '#26BD16');\r\n      dataset.backgroundColor[0] = gradient;\r\n      dataset.hoverBackgroundColor[0] = gradient;\r\n    }\r\n  }\r\n\r\n  const data = {\r\n    labels: [\"Green\", \"Gray\"],\r\n    datasets: [\r\n      {\r\n        data: [90,10],\r\n        backgroundColor: ['green','#E7E7E7'],\r\n        hoverBackgroundColor: ['green','#E7E7E7'],\r\n        borderWidth: [0, 0],\r\n      }\r\n    ],\r\n    options: {\r\n      layout: {\r\n        padding: {\r\n          bottom: 25,\r\n          top: 25\r\n        }\r\n      },\r\n      responsive:'true',\r\n      rotation: Math.PI,\r\n      circumference: Math.PI,\r\n      legend: {\r\n        display: false\r\n      },\r\n      tooltips: {\r\n        enabled: false\r\n      },\r\n      transition: {\r\n        active: {\r\n          animation: {\r\n            duration: 20000\r\n          }\r\n        }\r\n      },\r\n      cutoutPercentage: 60,\r\n      animation: {\r\n        easing:'linear',\r\n        onProgress:(chart)=>{\r\n          const needleValue = chart.chart.config.data.datasets[0].data[0];\r\n          const dataTotal = chart.chart.config.data.datasets[0].data.reduce(\r\n              (a, b) => a + b,\r\n              0\r\n          );\r\n          const angle = Math.PI + ( (chart.currentStep/chart.numSteps)/ dataTotal) * (needleValue) * Math.PI;\r\n          const ctx = chart.chart.ctx;\r\n          const cw = chart.chart.canvas.offsetWidth;\r\n          const ch = chart.chart.canvas.offsetHeight;\r\n          const cx = (cw / 2);\r\n          const cy = (ch - 25);\r\n\r\n          ctx.translate(cx, cy);\r\n          ctx.rotate(angle);\r\n          ctx.beginPath();\r\n          ctx.moveTo(0, -10);\r\n          ctx.lineTo(cy, 0);\r\n          ctx.lineTo(0, 10);\r\n          ctx.fillStyle = \"black\";\r\n          ctx.fill();\r\n          ctx.rotate(-angle);\r\n          ctx.translate(-cx, -cy);\r\n          ctx.beginPath();\r\n          ctx.arc(cx, cy, 20, 0, Math.PI * 2);\r\n          ctx.fill();\r\n        }\r\n      },\r\n    }\r\n  };\r\n\r\n  return (\r\n      <div>\r\n        <h2>Sample</h2>\r\n        <Doughnut height=\"100px\" data={data} options={data.options} plugins={[plugin]} />\r\n      </div>\r\n  );\r\n}\r\n","import React from \"react\";\nimport Chart from \"./components/Chart\";\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div>\n        <Chart />\n      </div>\n    );\n  }\n}\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}